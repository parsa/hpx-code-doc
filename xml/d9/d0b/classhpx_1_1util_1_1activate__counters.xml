<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d9/d0b/classhpx_1_1util_1_1activate__counters" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::activate_counters</compoundname>
    <includes refid="d1/dab/activate__counters_8hpp" local="no">activate_counters.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a128cba60a14578c17e0c54e36a0a3c68" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d0/d33/classhpx_1_1lcos_1_1future" kindref="compound">future</ref>&lt; <ref refid="d5/d2b/structhpx_1_1performance__counters_1_1counter__value" kindref="compound">performance_counters::counter_value</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;future&lt;performance_counters::counter_value&gt; &gt; hpx::util::activate_counters::async_counter_values_type</definition>
        <argsstring></argsstring>
        <name>async_counter_values_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="41" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a4a23d66868da040db010462a8d00fcde" prot="public" static="no">
        <type>std::vector&lt; <ref refid="d5/d2b/structhpx_1_1performance__counters_1_1counter__value" kindref="compound">performance_counters::counter_value</ref> &gt;</type>
        <definition>typedef std::vector&lt;performance_counters::counter_value&gt; hpx::util::activate_counters::sync_counter_values_type</definition>
        <argsstring></argsstring>
        <name>sync_counter_values_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="44" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1ae7054b0a9fb5c579df4d9f59373be74a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; hpx::util::activate_counters::names_</definition>
        <argsstring></argsstring>
        <name>names_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="84" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a045b88d5da4f6965e69996957deb6ca0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="db/dee/structhpx_1_1naming_1_1id__type" kindref="compound">naming::id_type</ref> &gt;</type>
        <definition>std::vector&lt;naming::id_type&gt; hpx::util::activate_counters::ids_</definition>
        <argsstring></argsstring>
        <name>ids_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="85" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1abcdce9241e5868319762f0fbad1e2b52" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; hpx::util::activate_counters::uoms_</definition>
        <argsstring></argsstring>
        <name>uoms_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="86" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a58030114fe706c120ec4d6d793da25d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::util::activate_counters::activate_counters</definition>
        <argsstring>(std::vector&lt; std::string &gt; const &amp;names)</argsstring>
        <name>activate_counters</name>
        <param>
          <type>std::vector&lt; std::string &gt; const &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="25" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="33" bodyend="37"/>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1af2193bbb81054707baea1f8f19d63ddf" compoundref="df/d90/activate__counters_8cpp" startline="96" endline="131">start_counters</references>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a79ce3994837ff93bc2e5832f5490e3e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::util::activate_counters::~activate_counters</definition>
        <argsstring>()</argsstring>
        <name>~activate_counters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="27" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="39" bodyend="42"/>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a61f1598c47b0625dd12c570170251f50" compoundref="df/d90/activate__counters_8cpp" startline="133" endline="172">stop_counters</references>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a690fe1346b07619581fc541fa99b3493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::activate_counters::reset_counters</definition>
        <argsstring>(error_code &amp;ec=throws)</argsstring>
        <name>reset_counters</name>
        <param>
          <type><ref refid="d0/ddf/classhpx_1_1error__code" kindref="compound">error_code</ref> &amp;</type>
          <declname>ec</declname>
          <defval><ref refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" kindref="member">throws</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="38" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="174" bodyend="210"/>
        <references refid="d7/d3a/throw__exception_8hpp_1a81b2aae0c2744fad9953f45a3c90683b" compoundref="d7/d3a/throw__exception_8hpp" startline="179">HPX_THROWS_IF</references>
        <references refid="d8/d83/namespacehpx_1aac5bec895c3a4b279fb5d442a87a6663abfb0c9b0ab71f8bcbe9a40c88b6b6959" compoundref="d9/d99/error_8hpp" startline="53">hpx::invalid_status</references>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
        <references refid="d8/d83/namespacehpx_1acb7d8e37b73b823956ce144f9a57eaa4" compoundref="d5/d2c/async_8hpp" startline="343" endline="351">hpx::async</references>
        <references refid="d2/dc9/namespacehpx_1_1lcos_1aa22f424df487aac588e30b71f15dd2fe" compoundref="d4/d69/wait__all_8hpp" startline="365" endline="375">hpx::lcos::wait_all</references>
        <references refid="d8/de8/cxx11__decltype_8cpp_1a7f662ae1bc1219fffd3a04e4eb570942" compoundref="d8/de8/cxx11__decltype_8cpp" startline="24" endline="24">f</references>
        <references refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" compoundref="d5/d07/exception__list_8cpp" startline="48">hpx::throws</references>
        <references refid="d8/d83/namespacehpx_1a154bc03d8bffebc41d36767f98aea4b0" compoundref="d3/d5f/error__code_8hpp" startline="238" endline="241">hpx::make_error_code</references>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a0d0be179e43254beb3d99bb85d971236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a128cba60a14578c17e0c54e36a0a3c68" kindref="member">async_counter_values_type</ref></type>
        <definition>std::vector&lt; future&lt; performance_counters::counter_value &gt; &gt; hpx::util::activate_counters::evaluate_counters</definition>
        <argsstring>(launch::async_policy, bool reset=false, error_code &amp;ec=throws)</argsstring>
        <name>evaluate_counters</name>
        <param>
          <type>launch::async_policy</type>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="d0/ddf/classhpx_1_1error__code" kindref="compound">error_code</ref> &amp;</type>
          <declname>ec</declname>
          <defval><ref refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" kindref="member">throws</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="46" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="213" bodyend="235"/>
        <references refid="d7/d3a/throw__exception_8hpp_1a81b2aae0c2744fad9953f45a3c90683b" compoundref="d7/d3a/throw__exception_8hpp" startline="179">HPX_THROWS_IF</references>
        <references refid="d8/d83/namespacehpx_1aac5bec895c3a4b279fb5d442a87a6663abfb0c9b0ab71f8bcbe9a40c88b6b6959" compoundref="d9/d99/error_8hpp" startline="53">hpx::invalid_status</references>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
        <references refid="d8/d83/namespacehpx_1acb7d8e37b73b823956ce144f9a57eaa4" compoundref="d5/d2c/async_8hpp" startline="343" endline="351">hpx::async</references>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1ac7b95c600e9c77e03aa2c7d4d72e128f" compoundref="df/d90/activate__counters_8cpp" startline="238" endline="245">evaluate_counters</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1ac7b95c600e9c77e03aa2c7d4d72e128f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a4a23d66868da040db010462a8d00fcde" kindref="member">sync_counter_values_type</ref></type>
        <definition>std::vector&lt; performance_counters::counter_value &gt; hpx::util::activate_counters::evaluate_counters</definition>
        <argsstring>(launch::sync_policy, bool reset=false, error_code &amp;ec=throws)</argsstring>
        <name>evaluate_counters</name>
        <param>
          <type>launch::sync_policy</type>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="d0/ddf/classhpx_1_1error__code" kindref="compound">error_code</ref> &amp;</type>
          <declname>ec</declname>
          <defval><ref refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" kindref="member">throws</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="49" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="238" bodyend="245"/>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a0d0be179e43254beb3d99bb85d971236" compoundref="df/d90/activate__counters_8cpp" startline="213" endline="235">evaluate_counters</references>
        <references refid="d8/d83/namespacehpx_1acb7d8e37b73b823956ce144f9a57eaa4" compoundref="d5/d2c/async_8hpp" startline="343" endline="351">hpx::async</references>
        <references refid="df/dad/namespacehpx_1_1util_1a687bc9b163ccbdaaa82764b171b7f0c0" compoundref="d0/d06/unwrap_8hpp" startline="65" endline="69">hpx::util::unwrap</references>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a8767d09bbc1eaff8fbbfc1d9709897b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hpx::util::activate_counters::name</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>name</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="68" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="68" bodyend="71"/>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a797f766dd5e2416f54a5a91b267bedd4" compoundref="df/d90/activate__counters_8cpp" startline="64" endline="93">find_counters</referencedby>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1af2193bbb81054707baea1f8f19d63ddf" compoundref="df/d90/activate__counters_8cpp" startline="96" endline="131">start_counters</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1ab8898689098dbfa676922ae9a0269be2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="db/dee/structhpx_1_1naming_1_1id__type" kindref="compound">naming::id_type</ref></type>
        <definition>naming::id_type hpx::util::activate_counters::id</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>id</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="73" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="73" bodyend="76"/>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a9fb9e278bb6d960782d1396020033d38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hpx::util::activate_counters::unit_of_measure</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>unit_of_measure</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="78" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="78" bodyend="81"/>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a797f766dd5e2416f54a5a91b267bedd4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::activate_counters::find_counters</definition>
        <argsstring>()</argsstring>
        <name>find_counters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="30" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="64" bodyend="93"/>
        <references refid="db/dc5/namespacehpx_1_1components_1_1detail_1a3535740f2fbaa81b7509ebb9763d9b8f" compoundref="d0/d52/component__type_8cpp" startline="19">hpx::components::detail::names</references>
        <references refid="d2/d7a/namespacehpx_1_1compute_1aaaff8090fc8dfbf017866ab8203e20d5" compoundref="d4/d4c/compute_2vector_8hpp" startline="377" endline="380">hpx::compute::swap</references>
        <references refid="da/d2f/namespacehpx_1_1util_1_1placeholders_1a89ca8533cf019f4f06973eaac96acee6" compoundref="d3/df8/util_2bind_8hpp" startline="45">hpx::util::placeholders::_1</references>
        <references refid="da/d2f/namespacehpx_1_1util_1_1placeholders_1a05a3880ac546213aa2aee3b610d31570" compoundref="d3/df8/util_2bind_8hpp" startline="46">hpx::util::placeholders::_2</references>
        <references refid="d8/dfd/id__type__ref__counting__1032_8cpp_1ab811b86ea5107ffb3351fcaa29d2c652" compoundref="d8/dfd/id__type__ref__counting__1032_8cpp" startline="132" endline="139">func</references>
        <references refid="df/dad/namespacehpx_1_1util_1ad844caedf82a0173d6909d910c3e48c6" compoundref="d3/df8/util_2bind_8hpp" startline="365" endline="369">hpx::util::bind</references>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1acc7f93dc5cd3bf46dbcfbe72012f2ff6" compoundref="df/d90/activate__counters_8cpp" startline="44" endline="62">find_counter</references>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a8767d09bbc1eaff8fbbfc1d9709897b6" compoundref="d1/dab/activate__counters_8hpp" startline="68" endline="71">name</references>
        <references refid="df/dad/namespacehpx_1_1util_1ac476e97ca5c1dec44106cb68a534ea22" compoundref="d3/dc3/runtime_8cpp" startline="1156" endline="1159">hpx::util::expand</references>
        <references refid="d0/d36/namespacehpx_1_1performance__counters_1a790341c5b1fd81ec20123edc6003dcb5">hpx::performance_counters::discover_counter_type</references>
        <references refid="d0/d36/namespacehpx_1_1performance__counters_1a840ce2ee153d48652cb65fc8757b7ef5a4639293abdf0c38eacfbd23048abcce6" compoundref="dc/da2/counters_8hpp" startline="408">hpx::performance_counters::discover_counters_full</references>
        <references refid="d2/d54/assert_8hpp_1a8d1e72f13bfab6a86ea41d879f6ce8c1" compoundref="d2/d54/assert_8hpp" startline="60">HPX_ASSERT</references>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1af2193bbb81054707baea1f8f19d63ddf" compoundref="df/d90/activate__counters_8cpp" startline="96" endline="131">start_counters</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1acc7f93dc5cd3bf46dbcfbe72012f2ff6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::activate_counters::find_counter</definition>
        <argsstring>(performance_counters::counter_info const &amp;info, error_code &amp;ec)</argsstring>
        <name>find_counter</name>
        <param>
          <type><ref refid="d4/dc4/structhpx_1_1performance__counters_1_1counter__info" kindref="compound">performance_counters::counter_info</ref> const &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="d0/ddf/classhpx_1_1error__code" kindref="compound">error_code</ref> &amp;</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="31" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="44" bodyend="62"/>
        <references refid="d0/d36/namespacehpx_1_1performance__counters_1ab7849064e361c28c8975a47717e5f05e" compoundref="dc/da2/counters_8hpp" startline="648" endline="655">hpx::performance_counters::get_counter</references>
        <references refid="d4/dc4/structhpx_1_1performance__counters_1_1counter__info_1a419de01fee0fca53fefc09a26490e5a6" compoundref="dc/da2/counters_8hpp" startline="372">hpx::performance_counters::counter_info::fullname_</references>
        <references refid="de/d38/branch__hints_8hpp_1ad92a1d036a58cfd44a5513ce0b2c3a09" compoundref="de/d38/branch__hints_8hpp" startline="17">HPX_UNLIKELY</references>
        <references refid="d7/d3a/throw__exception_8hpp_1a81b2aae0c2744fad9953f45a3c90683b" compoundref="d7/d3a/throw__exception_8hpp" startline="179">HPX_THROWS_IF</references>
        <references refid="d8/d83/namespacehpx_1aac5bec895c3a4b279fb5d442a87a6663ad6980c3ad7fd111b69144dbf5323120f" compoundref="d9/d99/error_8hpp" startline="55">hpx::bad_parameter</references>
        <references refid="d0/ddf/classhpx_1_1error__code_1a70ab613bf2dfd57edc658b4acc680a63" compoundref="d5/d6f/error__code_8cpp" startline="165" endline="176">hpx::error_code::get_message</references>
        <references refid="d4/dc4/structhpx_1_1performance__counters_1_1counter__info_1a76a4b161c977c61839545472be67f40f" compoundref="dc/da2/counters_8hpp" startline="374">hpx::performance_counters::counter_info::unit_of_measure_</references>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a797f766dd5e2416f54a5a91b267bedd4" compoundref="df/d90/activate__counters_8cpp" startline="64" endline="93">find_counters</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1af2193bbb81054707baea1f8f19d63ddf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::activate_counters::start_counters</definition>
        <argsstring>(error_code &amp;ec=throws)</argsstring>
        <name>start_counters</name>
        <param>
          <type><ref refid="d0/ddf/classhpx_1_1error__code" kindref="compound">error_code</ref> &amp;</type>
          <declname>ec</declname>
          <defval><ref refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" kindref="member">throws</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="34" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="96" bodyend="131"/>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a8767d09bbc1eaff8fbbfc1d9709897b6" compoundref="d1/dab/activate__counters_8hpp" startline="68" endline="71">name</references>
        <references refid="d0/d36/namespacehpx_1_1performance__counters_1af0b1efba2df501bf2e11f2b55f1b35ef" compoundref="dc/da2/counters_8hpp" startline="31" endline="36">hpx::performance_counters::ensure_counter_prefix</references>
        <references refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a797f766dd5e2416f54a5a91b267bedd4" compoundref="df/d90/activate__counters_8cpp" startline="64" endline="93">find_counters</references>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
        <references refid="d1/d61/namespacehpx__optsweep_1aa6a86b253d2032cf628b505a5c1b55b2" compoundref="db/d38/hpx__optsweep_8py" startline="287">hpx_optsweep.start</references>
        <references refid="d8/d83/namespacehpx_1acb7d8e37b73b823956ce144f9a57eaa4" compoundref="d5/d2c/async_8hpp" startline="343" endline="351">hpx::async</references>
        <references refid="d2/dc9/namespacehpx_1_1lcos_1aa22f424df487aac588e30b71f15dd2fe" compoundref="d4/d69/wait__all_8hpp" startline="365" endline="375">hpx::lcos::wait_all</references>
        <references refid="d8/de8/cxx11__decltype_8cpp_1a7f662ae1bc1219fffd3a04e4eb570942" compoundref="d8/de8/cxx11__decltype_8cpp" startline="24" endline="24">f</references>
        <references refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" compoundref="d5/d07/exception__list_8cpp" startline="48">hpx::throws</references>
        <references refid="d8/d83/namespacehpx_1a154bc03d8bffebc41d36767f98aea4b0" compoundref="d3/d5f/error__code_8hpp" startline="238" endline="241">hpx::make_error_code</references>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a58030114fe706c120ec4d6d793da25d7" compoundref="df/d90/activate__counters_8cpp" startline="33" endline="37">activate_counters</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/d0b/classhpx_1_1util_1_1activate__counters_1a61f1598c47b0625dd12c570170251f50" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::activate_counters::stop_counters</definition>
        <argsstring>(error_code &amp;ec=throws)</argsstring>
        <name>stop_counters</name>
        <param>
          <type><ref refid="d0/ddf/classhpx_1_1error__code" kindref="compound">error_code</ref> &amp;</type>
          <declname>ec</declname>
          <defval><ref refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" kindref="member">throws</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="35" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/src/util/activate_counters.cpp" bodystart="133" bodyend="172"/>
        <references refid="d7/d3a/throw__exception_8hpp_1a81b2aae0c2744fad9953f45a3c90683b" compoundref="d7/d3a/throw__exception_8hpp" startline="179">HPX_THROWS_IF</references>
        <references refid="d8/d83/namespacehpx_1aac5bec895c3a4b279fb5d442a87a6663abfb0c9b0ab71f8bcbe9a40c88b6b6959" compoundref="d9/d99/error_8hpp" startline="53">hpx::invalid_status</references>
        <references refid="d7/d92/block__os__threads__1036_8cpp_1a59b5f70d95f641564c5199c696b87cfd" compoundref="d7/d92/block__os__threads__1036_8cpp" startline="53">i</references>
        <references refid="d8/d83/namespacehpx_1a01a3c286e028da685dd9d616fb7c33c7">hpx::stop</references>
        <references refid="d8/d83/namespacehpx_1acb7d8e37b73b823956ce144f9a57eaa4" compoundref="d5/d2c/async_8hpp" startline="343" endline="351">hpx::async</references>
        <references refid="d2/dc9/namespacehpx_1_1lcos_1aa22f424df487aac588e30b71f15dd2fe" compoundref="d4/d69/wait__all_8hpp" startline="365" endline="375">hpx::lcos::wait_all</references>
        <references refid="d8/de8/cxx11__decltype_8cpp_1a7f662ae1bc1219fffd3a04e4eb570942" compoundref="d8/de8/cxx11__decltype_8cpp" startline="24" endline="24">f</references>
        <references refid="d8/d83/namespacehpx_1a3c805fbcc4bc26b262633b5134b42014" compoundref="d5/d07/exception__list_8cpp" startline="48">hpx::throws</references>
        <references refid="d8/d83/namespacehpx_1a154bc03d8bffebc41d36767f98aea4b0" compoundref="d3/d5f/error__code_8hpp" startline="238" endline="241">hpx::make_error_code</references>
        <referencedby refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a79ce3994837ff93bc2e5832f5490e3e8" compoundref="df/d90/activate__counters_8cpp" startline="39" endline="42">~activate_counters</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" line="23" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/util/activate_counters.hpp" bodystart="22" bodyend="87"/>
    <listofallmembers>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a58030114fe706c120ec4d6d793da25d7" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>activate_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a128cba60a14578c17e0c54e36a0a3c68" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>async_counter_values_type</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a0d0be179e43254beb3d99bb85d971236" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>evaluate_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1ac7b95c600e9c77e03aa2c7d4d72e128f" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>evaluate_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1acc7f93dc5cd3bf46dbcfbe72012f2ff6" prot="protected" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>find_counter</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a797f766dd5e2416f54a5a91b267bedd4" prot="protected" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>find_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1ab8898689098dbfa676922ae9a0269be2" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>id</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a045b88d5da4f6965e69996957deb6ca0" prot="private" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>ids_</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a8767d09bbc1eaff8fbbfc1d9709897b6" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>name</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1ae7054b0a9fb5c579df4d9f59373be74a" prot="private" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>names_</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a690fe1346b07619581fc541fa99b3493" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>reset_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1af2193bbb81054707baea1f8f19d63ddf" prot="protected" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>start_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a61f1598c47b0625dd12c570170251f50" prot="protected" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>stop_counters</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a4a23d66868da040db010462a8d00fcde" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>sync_counter_values_type</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a9fb9e278bb6d960782d1396020033d38" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>unit_of_measure</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1abcdce9241e5868319762f0fbad1e2b52" prot="private" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>uoms_</name></member>
      <member refid="d9/d0b/classhpx_1_1util_1_1activate__counters_1a79ce3994837ff93bc2e5832f5490e3e8" prot="public" virt="non-virtual"><scope>hpx::util::activate_counters</scope><name>~activate_counters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
