<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a" kind="struct" language="C++" prot="public">
    <compoundname>hpx::traits::detail::acquire_shared_state_impl&lt; Future, typename std::enable_if&lt; is_future&lt; Future &gt;::value &gt;::type &gt;</compoundname>
    <includes refid="d4/d49/acquire__shared__state_8hpp" local="no">acquire_shared_state.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Future</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1ae4f8c70abbb8f638afc4325e269531f7" prot="public" static="no">
        <type><ref refid="d8/d87/structhpx_1_1traits_1_1detail_1_1shared__state__ptr" kindref="compound">traits::detail::shared_state_ptr</ref>&lt; typename <ref refid="de/d1b/structhpx_1_1traits_1_1future__traits" kindref="compound">traits::future_traits</ref>&lt; Future &gt;::<ref refid="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1ae4f8c70abbb8f638afc4325e269531f7" kindref="member">type</ref> &gt;::<ref refid="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1ae4f8c70abbb8f638afc4325e269531f7" kindref="member">type</ref> const  &amp;</type>
        <definition>typedef traits::detail::shared_state_ptr&lt; typename traits::future_traits&lt;Future&gt;::type &gt;::type const&amp; hpx::traits::detail::acquire_shared_state_impl&lt; Future, typename std::enable_if&lt; is_future&lt; Future &gt;::value &gt;::type &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/traits/acquire_shared_state.hpp" line="81" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/traits/acquire_shared_state.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1aeb472a264899f92187dd5f1cdb9ff08a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d7f/forceinline_8hpp_1a6c8f31b01feb29751470093a9a75b04f" kindref="member">HPX_FORCEINLINE</ref> <ref refid="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1ae4f8c70abbb8f638afc4325e269531f7" kindref="member">type</ref></type>
        <definition>HPX_FORCEINLINE type hpx::traits::detail::acquire_shared_state_impl&lt; Future, typename std::enable_if&lt; is_future&lt; Future &gt;::value &gt;::type &gt;::operator()</definition>
        <argsstring>(Future const &amp;f) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Future const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/traits/acquire_shared_state.hpp" line="84" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/traits/acquire_shared_state.hpp" bodystart="84" bodyend="87"/>
        <references refid="de/d59/namespacehpx_1_1traits_1_1detail_1ae06e3947c279822dda3d644f19edb11e" compoundref="d4/d49/acquire__shared__state_8hpp" startline="134" endline="138">hpx::traits::detail::get_shared_state</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/Parsa/Source/Repos/hpx/hpx/traits/acquire_shared_state.hpp" line="78" column="1" bodyfile="C:/Users/Parsa/Source/Repos/hpx/hpx/traits/acquire_shared_state.hpp" bodystart="72" bodyend="88"/>
    <listofallmembers>
      <member refid="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1aeb472a264899f92187dd5f1cdb9ff08a" prot="public" virt="non-virtual"><scope>hpx::traits::detail::acquire_shared_state_impl&lt; Future, typename std::enable_if&lt; is_future&lt; Future &gt;::value &gt;::type &gt;</scope><name>operator()</name></member>
      <member refid="d1/db2/structhpx_1_1traits_1_1detail_1_1acquire__shared__state__impl_3_01_future_00_01typename_01std_1_898c101356f7f7990496f9ac0805a64a_1ae4f8c70abbb8f638afc4325e269531f7" prot="public" virt="non-virtual"><scope>hpx::traits::detail::acquire_shared_state_impl&lt; Future, typename std::enable_if&lt; is_future&lt; Future &gt;::value &gt;::type &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
