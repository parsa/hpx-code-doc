digraph "hpx::util::logging::manipulator::detail::generic_holder&lt; generic_type, manipulator_base &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node11 [label="hpx::util::logging\l::manipulator::detail\l::generic_holder\< generic\l_type, manipulator_base \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="hpx::util::logging\l::manipulator::class\l_\< generic_holder\< generic\l_type, manipulator_base \>\l, implement_op_equal::has\l_context, manipulator_base \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d06/structhpx_1_1util_1_1logging_1_1manipulator_1_1class__.html"];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="manipulator_base",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node14 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="hpx::util::logging\l::manipulator::detail\l::op_equal_base\< op_e \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df9/structhpx_1_1util_1_1logging_1_1manipulator_1_1detail_1_1op__equal__base.html"];
  Node15 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< op_e \>" ,fontname="Helvetica"];
  Node15 [label="hpx::util::logging\l::manipulator::detail\l::op_equal_base\< type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df9/structhpx_1_1util_1_1logging_1_1manipulator_1_1detail_1_1op__equal__base.html"];
  Node16 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="hpx::util::logging\l::op_equal::same_type\l_op_equal\< generic_holder\l\< generic_type, manipulator\l_base \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d01/structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal.html"];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="hpx::util::logging\l::op_equal::same_type\l_op_equal_base",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d91/structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__base.html",tooltip="Base class when you want to implement operator== that will compare based on type and member operator=..."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="hpx::util::logging\l::op_equal::same_type\l_op_equal_top",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d6e/structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top.html"];
  Node19 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< generic_holder\< generic\l_type, manipulator_base \> \>" ,fontname="Helvetica"];
  Node19 [label="hpx::util::logging\l::op_equal::same_type\l_op_equal\< type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d01/structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal.html",tooltip="Implements operator==, which compares two objects. If they have the same type, it will compare them u..."];
  Node17 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< generic_holder\< generic\l_type, manipulator_base\l \>, implement_op_equal::\lhas_context, manipulator_base \>" ,fontname="Helvetica"];
  Node20 [label="hpx::util::logging\l::manipulator::class\l_\< type, op_e, base_type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d06/structhpx_1_1util_1_1logging_1_1manipulator_1_1class__.html",tooltip="Use this when implementing your own formatter or destination class. Don&#39;t use this directly..."];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="base_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node14 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
