digraph "hpx::parallel::traits::detail::is_indirect_callable&lt; ExPolicy, F, hpx::util::detail::pack&lt; Projected... &gt;, typename std::enable_if&lt; hpx::util::detail::all_of&lt; is_projected_indirect&lt; Projected &gt;... &gt;::value &amp;&amp;(!hpx::parallel::execution::is_vectorpack_execution_policy&lt; ExPolicy &gt;::value||!hpx::util::detail::all_of&lt; is_projected_zip_iterator&lt; Projected &gt;... &gt;::value) &gt;::type &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node8 [label="hpx::parallel::traits\l::detail::is_indirect\l_callable\< ExPolicy, F,\l hpx::util::detail::pack\l\< Projected... \>, typename\l std::enable_if\< hpx::util\l::detail::all_of\< is_projected\l_indirect\< Projected \>... \>::value\l &&(!hpx::parallel::execution::is\l_vectorpack_execution_policy\< ExPolicy\l \>::value\|\|!hpx::util::detail::all_of\l\< is_projected_zip_iterator\< Projected\l \>... \>::value) \>::type \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="hpx::parallel::traits\l::detail::is_indirect\l_callable_impl\< F, projected\l_result_of_indirect\< Projected\l \>::type... \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d45/structhpx_1_1parallel_1_1traits_1_1detail_1_1is__indirect__callable__impl.html"];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="hpx::traits::is_invocable\l\< F, Args... \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d49/structhpx_1_1traits_1_1is__invocable.html"];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="hpx::traits::detail\l::is_callable_impl\<\l F &&(Ts &&...), void \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d40/structhpx_1_1traits_1_1detail_1_1is__callable__impl.html"];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="false_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< F &&(Ts &&...), void \>" ,fontname="Helvetica"];
  Node13 [label="hpx::traits::detail\l::is_callable_impl\<\l T, R, Enable \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d40/structhpx_1_1traits_1_1detail_1_1is__callable__impl.html"];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< F, Args... \>" ,fontname="Helvetica"];
  Node14 [label="hpx::traits::is_invocable\l\< F, Ts \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d49/structhpx_1_1traits_1_1is__invocable.html"];
  Node11 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< F, projected_result\l_of_indirect\< Projected\l \>::type... \>" ,fontname="Helvetica"];
  Node15 [label="hpx::parallel::traits\l::detail::is_indirect\l_callable_impl\< F, Args \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d45/structhpx_1_1parallel_1_1traits_1_1detail_1_1is__indirect__callable__impl.html"];
  Node10 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
